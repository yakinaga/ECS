// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
A=M-1
D=M
A=A-1
D=M-D
@StackTest.gen.1
D;JEQ
@2
D=A
@SP
A=M-D
M=0
@StackTest.gen.2
0;JMP
(StackTest.gen.1)
@2
D=A
@SP
A=M-D
M=-1
(StackTest.gen.2)
@SP
M=M-1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
A=M-1
D=M
A=A-1
D=M-D
@StackTest.gen.3
D;JEQ
@2
D=A
@SP
A=M-D
M=0
@StackTest.gen.4
0;JMP
(StackTest.gen.3)
@2
D=A
@SP
A=M-D
M=-1
(StackTest.gen.4)
@SP
M=M-1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
A=M-1
D=M
A=A-1
D=M-D
@StackTest.gen.5
D;JEQ
@2
D=A
@SP
A=M-D
M=0
@StackTest.gen.6
0;JMP
(StackTest.gen.5)
@2
D=A
@SP
A=M-D
M=-1
(StackTest.gen.6)
@SP
M=M-1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
A=M-1
D=M
A=A-1
D=M-D
@StackTest.gen.7
D;JLT
@2
D=A
@SP
A=M-D
M=0
@StackTest.gen.8
0;JMP
(StackTest.gen.7)
@2
D=A
@SP
A=M-D
M=-1
(StackTest.gen.8)
@SP
M=M-1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
A=M-1
D=M
A=A-1
D=M-D
@StackTest.gen.9
D;JLT
@2
D=A
@SP
A=M-D
M=0
@StackTest.gen.10
0;JMP
(StackTest.gen.9)
@2
D=A
@SP
A=M-D
M=-1
(StackTest.gen.10)
@SP
M=M-1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
A=M-1
D=M
A=A-1
D=M-D
@StackTest.gen.11
D;JLT
@2
D=A
@SP
A=M-D
M=0
@StackTest.gen.12
0;JMP
(StackTest.gen.11)
@2
D=A
@SP
A=M-D
M=-1
(StackTest.gen.12)
@SP
M=M-1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@StackTest.gen.13
D;JGT
@2
D=A
@SP
A=M-D
M=0
@StackTest.gen.14
0;JMP
(StackTest.gen.13)
@2
D=A
@SP
A=M-D
M=-1
(StackTest.gen.14)
@SP
M=M-1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@StackTest.gen.15
D;JGT
@2
D=A
@SP
A=M-D
M=0
@StackTest.gen.16
0;JMP
(StackTest.gen.15)
@2
D=A
@SP
A=M-D
M=-1
(StackTest.gen.16)
@SP
M=M-1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
A=M-1
D=M
A=A-1
D=M-D
@StackTest.gen.17
D;JGT
@2
D=A
@SP
A=M-D
M=0
@StackTest.gen.18
0;JMP
(StackTest.gen.17)
@2
D=A
@SP
A=M-D
M=-1
(StackTest.gen.18)
@SP
M=M-1
// push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
// push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
// neg
@SP
A=M-1
M=-M
// and
@SP
A=M-1
D=M
A=A-1
M=D&M
@SP
M=M-1
// push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
A=M-1
D=M
A=A-1
M=D|M
@SP
M=M-1
// not
@SP
A=M-1
M=!M
