@256 // 0
D=A // 1
@SP // 2
M=D // 3
// call Sys.init 0
//+++ push label_uniq_1
@label_uniq_1 // 4
D=A // 5
@SP // 6
A=M // 7
M=D // 8
@SP // 9
M=M+1 // 10
//+++ push LCL
@LCL // 11
D=M // 12
@SP // 13
A=M // 14
M=D // 15
@SP // 16
M=M+1 // 17
//+++ push ARG
@ARG // 18
D=M // 19
@SP // 20
A=M // 21
M=D // 22
@SP // 23
M=M+1 // 24
//+++ push THIS
@THIS // 25
D=M // 26
@SP // 27
A=M // 28
M=D // 29
@SP // 30
M=M+1 // 31
//+++ push THAT
@THAT // 32
D=M // 33
@SP // 34
A=M // 35
M=D // 36
@SP // 37
M=M+1 // 38
//+++ ARG = SP-0-5
@5 // 39
D=A // 40
@0 // 41
D=D+A // 42
@SP // 43
D=M-D // 44
@ARG // 45
M=D // 46
//+++ LCL=SP
@SP // 47
D=M // 48
@LCL // 49
M=D // 50
//+++ goto Sys.init
@Sys.init // 51
0;JMP // 52
//+++ (return address)
(label_uniq_1)
// function Class1.set 0
(Class1.set)
// push argument 0
@ARG // 53
D=M // 54
@0 // 55
AD=D+A // 56
D=M // 57
@SP // 58
A=M // 59
M=D // 60
@SP // 61
M=M+1 // 62
// pop static 0
@Class1.0 // 63
AD=A // 64
@R13 // 65
M=D // 66
@SP // 67
A=M-1 // 68
D=M // 69
@R13 // 70
A=M // 71
M=D // 72
@SP // 73
M=M-1 // 74
// push argument 1
@ARG // 75
D=M // 76
@1 // 77
AD=D+A // 78
D=M // 79
@SP // 80
A=M // 81
M=D // 82
@SP // 83
M=M+1 // 84
// pop static 1
@Class1.1 // 85
AD=A // 86
@R13 // 87
M=D // 88
@SP // 89
A=M-1 // 90
D=M // 91
@R13 // 92
A=M // 93
M=D // 94
@SP // 95
M=M-1 // 96
// push constant 0
@0 // 97
D=A // 98
@SP // 99
A=M // 100
M=D // 101
@SP // 102
M=M+1 // 103
// return
@LCL // 104
D=M // 105
@FRAME // 106
M=D // 107
@5 // 108
D=A // 109
@FRAME // 110
A=M-D // 111
D=M // 112
@RET // 113
M=D // 114
@SP // 115
A=M-1 // 116
D=M // 117
@ARG // 118
A=M // 119
M=D // 120
@ARG // 121
D=M+1 // 122
@SP // 123
M=D // 124
@FRAME // 125
AM=M-1 // 126
D=M // 127
@THAT // 128
M=D // 129
@FRAME // 130
AM=M-1 // 131
D=M // 132
@THIS // 133
M=D // 134
@FRAME // 135
AM=M-1 // 136
D=M // 137
@ARG // 138
M=D // 139
@FRAME // 140
AM=M-1 // 141
D=M // 142
@LCL // 143
M=D // 144
@RET // 145
A=M // 146
0;JMP // 147
// function Class1.get 0
(Class1.get)
// push static 0
@Class1.0 // 148
AD=A // 149
D=M // 150
@SP // 151
A=M // 152
M=D // 153
@SP // 154
M=M+1 // 155
// push static 1
@Class1.1 // 156
AD=A // 157
D=M // 158
@SP // 159
A=M // 160
M=D // 161
@SP // 162
M=M+1 // 163
// sub
@SP // 164
A=M-1 // 165
D=M // 166
A=A-1 // 167
M=M-D // 168
@SP // 169
M=M-1 // 170
// return
@LCL // 171
D=M // 172
@FRAME // 173
M=D // 174
@5 // 175
D=A // 176
@FRAME // 177
A=M-D // 178
D=M // 179
@RET // 180
M=D // 181
@SP // 182
A=M-1 // 183
D=M // 184
@ARG // 185
A=M // 186
M=D // 187
@ARG // 188
D=M+1 // 189
@SP // 190
M=D // 191
@FRAME // 192
AM=M-1 // 193
D=M // 194
@THAT // 195
M=D // 196
@FRAME // 197
AM=M-1 // 198
D=M // 199
@THIS // 200
M=D // 201
@FRAME // 202
AM=M-1 // 203
D=M // 204
@ARG // 205
M=D // 206
@FRAME // 207
AM=M-1 // 208
D=M // 209
@LCL // 210
M=D // 211
@RET // 212
A=M // 213
0;JMP // 214
// function Class2.set 0
(Class2.set)
// push argument 0
@ARG // 215
D=M // 216
@0 // 217
AD=D+A // 218
D=M // 219
@SP // 220
A=M // 221
M=D // 222
@SP // 223
M=M+1 // 224
// pop static 0
@Class2.0 // 225
AD=A // 226
@R13 // 227
M=D // 228
@SP // 229
A=M-1 // 230
D=M // 231
@R13 // 232
A=M // 233
M=D // 234
@SP // 235
M=M-1 // 236
// push argument 1
@ARG // 237
D=M // 238
@1 // 239
AD=D+A // 240
D=M // 241
@SP // 242
A=M // 243
M=D // 244
@SP // 245
M=M+1 // 246
// pop static 1
@Class2.1 // 247
AD=A // 248
@R13 // 249
M=D // 250
@SP // 251
A=M-1 // 252
D=M // 253
@R13 // 254
A=M // 255
M=D // 256
@SP // 257
M=M-1 // 258
// push constant 0
@0 // 259
D=A // 260
@SP // 261
A=M // 262
M=D // 263
@SP // 264
M=M+1 // 265
// return
@LCL // 266
D=M // 267
@FRAME // 268
M=D // 269
@5 // 270
D=A // 271
@FRAME // 272
A=M-D // 273
D=M // 274
@RET // 275
M=D // 276
@SP // 277
A=M-1 // 278
D=M // 279
@ARG // 280
A=M // 281
M=D // 282
@ARG // 283
D=M+1 // 284
@SP // 285
M=D // 286
@FRAME // 287
AM=M-1 // 288
D=M // 289
@THAT // 290
M=D // 291
@FRAME // 292
AM=M-1 // 293
D=M // 294
@THIS // 295
M=D // 296
@FRAME // 297
AM=M-1 // 298
D=M // 299
@ARG // 300
M=D // 301
@FRAME // 302
AM=M-1 // 303
D=M // 304
@LCL // 305
M=D // 306
@RET // 307
A=M // 308
0;JMP // 309
// function Class2.get 0
(Class2.get)
// push static 0
@Class2.0 // 310
AD=A // 311
D=M // 312
@SP // 313
A=M // 314
M=D // 315
@SP // 316
M=M+1 // 317
// push static 1
@Class2.1 // 318
AD=A // 319
D=M // 320
@SP // 321
A=M // 322
M=D // 323
@SP // 324
M=M+1 // 325
// sub
@SP // 326
A=M-1 // 327
D=M // 328
A=A-1 // 329
M=M-D // 330
@SP // 331
M=M-1 // 332
// return
@LCL // 333
D=M // 334
@FRAME // 335
M=D // 336
@5 // 337
D=A // 338
@FRAME // 339
A=M-D // 340
D=M // 341
@RET // 342
M=D // 343
@SP // 344
A=M-1 // 345
D=M // 346
@ARG // 347
A=M // 348
M=D // 349
@ARG // 350
D=M+1 // 351
@SP // 352
M=D // 353
@FRAME // 354
AM=M-1 // 355
D=M // 356
@THAT // 357
M=D // 358
@FRAME // 359
AM=M-1 // 360
D=M // 361
@THIS // 362
M=D // 363
@FRAME // 364
AM=M-1 // 365
D=M // 366
@ARG // 367
M=D // 368
@FRAME // 369
AM=M-1 // 370
D=M // 371
@LCL // 372
M=D // 373
@RET // 374
A=M // 375
0;JMP // 376
// function Sys.init 0
(Sys.init)
// push constant 6
@6 // 377
D=A // 378
@SP // 379
A=M // 380
M=D // 381
@SP // 382
M=M+1 // 383
// push constant 8
@8 // 384
D=A // 385
@SP // 386
A=M // 387
M=D // 388
@SP // 389
M=M+1 // 390
// call Class1.set 2
//+++ push label_uniq_2
@label_uniq_2 // 391
D=A // 392
@SP // 393
A=M // 394
M=D // 395
@SP // 396
M=M+1 // 397
//+++ push LCL
@LCL // 398
D=M // 399
@SP // 400
A=M // 401
M=D // 402
@SP // 403
M=M+1 // 404
//+++ push ARG
@ARG // 405
D=M // 406
@SP // 407
A=M // 408
M=D // 409
@SP // 410
M=M+1 // 411
//+++ push THIS
@THIS // 412
D=M // 413
@SP // 414
A=M // 415
M=D // 416
@SP // 417
M=M+1 // 418
//+++ push THAT
@THAT // 419
D=M // 420
@SP // 421
A=M // 422
M=D // 423
@SP // 424
M=M+1 // 425
//+++ ARG = SP-2-5
@5 // 426
D=A // 427
@2 // 428
D=D+A // 429
@SP // 430
D=M-D // 431
@ARG // 432
M=D // 433
//+++ LCL=SP
@SP // 434
D=M // 435
@LCL // 436
M=D // 437
//+++ goto Class1.set
@Class1.set // 438
0;JMP // 439
//+++ (return address)
(label_uniq_2)
// pop temp 0
@5 // 440
D=A // 441
@0 // 442
AD=D+A // 443
@R13 // 444
M=D // 445
@SP // 446
A=M-1 // 447
D=M // 448
@R13 // 449
A=M // 450
M=D // 451
@SP // 452
M=M-1 // 453
// push constant 23
@23 // 454
D=A // 455
@SP // 456
A=M // 457
M=D // 458
@SP // 459
M=M+1 // 460
// push constant 15
@15 // 461
D=A // 462
@SP // 463
A=M // 464
M=D // 465
@SP // 466
M=M+1 // 467
// call Class2.set 2
//+++ push label_uniq_3
@label_uniq_3 // 468
D=A // 469
@SP // 470
A=M // 471
M=D // 472
@SP // 473
M=M+1 // 474
//+++ push LCL
@LCL // 475
D=M // 476
@SP // 477
A=M // 478
M=D // 479
@SP // 480
M=M+1 // 481
//+++ push ARG
@ARG // 482
D=M // 483
@SP // 484
A=M // 485
M=D // 486
@SP // 487
M=M+1 // 488
//+++ push THIS
@THIS // 489
D=M // 490
@SP // 491
A=M // 492
M=D // 493
@SP // 494
M=M+1 // 495
//+++ push THAT
@THAT // 496
D=M // 497
@SP // 498
A=M // 499
M=D // 500
@SP // 501
M=M+1 // 502
//+++ ARG = SP-2-5
@5 // 503
D=A // 504
@2 // 505
D=D+A // 506
@SP // 507
D=M-D // 508
@ARG // 509
M=D // 510
//+++ LCL=SP
@SP // 511
D=M // 512
@LCL // 513
M=D // 514
//+++ goto Class2.set
@Class2.set // 515
0;JMP // 516
//+++ (return address)
(label_uniq_3)
// pop temp 0
@5 // 517
D=A // 518
@0 // 519
AD=D+A // 520
@R13 // 521
M=D // 522
@SP // 523
A=M-1 // 524
D=M // 525
@R13 // 526
A=M // 527
M=D // 528
@SP // 529
M=M-1 // 530
// call Class1.get 0
//+++ push label_uniq_4
@label_uniq_4 // 531
D=A // 532
@SP // 533
A=M // 534
M=D // 535
@SP // 536
M=M+1 // 537
//+++ push LCL
@LCL // 538
D=M // 539
@SP // 540
A=M // 541
M=D // 542
@SP // 543
M=M+1 // 544
//+++ push ARG
@ARG // 545
D=M // 546
@SP // 547
A=M // 548
M=D // 549
@SP // 550
M=M+1 // 551
//+++ push THIS
@THIS // 552
D=M // 553
@SP // 554
A=M // 555
M=D // 556
@SP // 557
M=M+1 // 558
//+++ push THAT
@THAT // 559
D=M // 560
@SP // 561
A=M // 562
M=D // 563
@SP // 564
M=M+1 // 565
//+++ ARG = SP-0-5
@5 // 566
D=A // 567
@0 // 568
D=D+A // 569
@SP // 570
D=M-D // 571
@ARG // 572
M=D // 573
//+++ LCL=SP
@SP // 574
D=M // 575
@LCL // 576
M=D // 577
//+++ goto Class1.get
@Class1.get // 578
0;JMP // 579
//+++ (return address)
(label_uniq_4)
// call Class2.get 0
//+++ push label_uniq_5
@label_uniq_5 // 580
D=A // 581
@SP // 582
A=M // 583
M=D // 584
@SP // 585
M=M+1 // 586
//+++ push LCL
@LCL // 587
D=M // 588
@SP // 589
A=M // 590
M=D // 591
@SP // 592
M=M+1 // 593
//+++ push ARG
@ARG // 594
D=M // 595
@SP // 596
A=M // 597
M=D // 598
@SP // 599
M=M+1 // 600
//+++ push THIS
@THIS // 601
D=M // 602
@SP // 603
A=M // 604
M=D // 605
@SP // 606
M=M+1 // 607
//+++ push THAT
@THAT // 608
D=M // 609
@SP // 610
A=M // 611
M=D // 612
@SP // 613
M=M+1 // 614
//+++ ARG = SP-0-5
@5 // 615
D=A // 616
@0 // 617
D=D+A // 618
@SP // 619
D=M-D // 620
@ARG // 621
M=D // 622
//+++ LCL=SP
@SP // 623
D=M // 624
@LCL // 625
M=D // 626
//+++ goto Class2.get
@Class2.get // 627
0;JMP // 628
//+++ (return address)
(label_uniq_5)
// label WHILE
(Sys.init$WHILE)
// goto WHILE
@Sys.init$WHILE // 629
0;JMP // 630
